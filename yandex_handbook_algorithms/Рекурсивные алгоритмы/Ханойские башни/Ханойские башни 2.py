"""
author: Orlovskiy Gleb
date:   19.07.25

Обозначим за f(n) минимальное кол-во действий с блинами в кол-ве n штук по перекладыванию их всех на 4ртый стержень
Даны 4 стержня, конфигурация начальная (стандартная):
     |              |          |          |
     _              |          |          |
    ___             |          |          |
   .....            |          |          |
  _______           |          |          |
 _________          |          |          |          

Попробуем придумать алгоритм, который гарантированно переложит из этой конфигурации
все блины на 4ртый стержень, кол-во операций его обозначим за g(n):
1) Переложим n-2 блина с первого стержня на третий с помощью этого алгоритма (т.е. алгоритм задан рекурсивно) 
2) Переложим блин с первого стержня на второй
3) Переложим с первого на четвертый
4) Переложим с второго на четвертый
5) Переложим n-2 блина с третьего на четвертый с помощью этого алгоритма

Кол-во операций в каждом шаге:
1) g(n-2)
2) 1
3) 1
4) 1
5) g(n-2)

Итого получаем рекуррентное соотношение: g(n) = 2*g(n-2) + 3

Докажем, что g(n) = f(n):

В любом алгоритме (который гарантированно решит задачу) будет момент, когда 
самый большой диск и следующий по порядку нужно будет переложить на пустой стержень 4 (первое взаимодействие с 4ртым стержнем),
для этого нужно чтобы они лежали первыми на двух разных стержнях, 
по правилам игры под ними не могут лежать другие блины, получаем конфигурацию:
     |            |          |          |
     |            |          |          |
     |            |          |          |
     |            |      .........      |
     |            |      .........      |
 _________     _______   .........      |           
На месте точек должна быть пирамида в порядке возрастания оставшихся блинов, 
по другому по правилам игры быть не может.
После операций перекладывания двух блинов на 4ртый - их можно перестать рассматривать (отбросить вовсе),
тогда свели задачу к той же, но уже с n-2 блинами.
За наименьшее кол-во операций можно перейти к конфигурации на рисунке можно, если решить
ту же задачу оптимально с n-2 блинами.

Итог: выяснили, что чтобы решить оптимально задачу с n блинами, нужно ее решить оптимально для n-2 блинов,
а чтобы решить оптимально для n-2 блинов, надо решить оптимально для n-4 блина и т.д. до того, что нужно
решить задачу оптимально для 1 или 0 блинов, а это мы умеем. 

Доказано!

f(0) = 0, f(1) = 1
Попробуем вычислить формулу для четных и нечетных n отдельно:
1) Для четных n = 2k, где k натуральное:                                            
    f(n) = 2*f(n-2) + 3 = (2^2)*f(n-4) + 2*3 + 3 = ... = f(0)*2^k + sum{3*2^(i-1) : 1 <= i <= k} =
                                                       = 3*(2^k - 1) =
                                                       = 3*(2^(n/2) - 1)
2) Для нечетных n = 2k + 1, где n натурально:
    f(n) = f(1)*2^k + sum{3*2^(i-1) : 1 <= i <= k} = 2^k + 3*(2^k - 1) = 2^((n-1)/2 + 2) - 3

К сожалению, Яндекс контест жалуется на тест со скрытыми входными данными, todo...
Был написан рекурсивный алгоритм перебора, значения совпали с формулами, но вычислить удалось только до n = 5
"""

n = int(input())

if n == 0:
    print(0)
elif n == 1:
    print(1)
elif n % 2 == 0:
    print(int(3*(2**(n/2) - 1)))
else:
    print(int(2**((n - 1)/2 + 2) - 3))
